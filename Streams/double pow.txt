 double pow(double a, long b) {
   ...> return Stream.<Double>generate(() -> a).limit(b).reduce(1.0, (x,y) -> x*y);
   ...> }


double seriesPi(long n) {
return Stream.<Integer>iterate(1, x -> x + 1).limit(n).mapToDouble(y -> y%2 == 0 ? -1 * (4.0/(2*y - 1)) : 4.0/(2*y - 1)).reduce(0.0, (a,b) -> a +b);
}


double approxPi(long n) {
	return Stream.<Point>generate(() -> new Point(getRand(), getRand())).limit(n).filter(x ->  
x.distanceTo(new Point(0.0, 0.0)) <= 1.0).count() / n * 4;





